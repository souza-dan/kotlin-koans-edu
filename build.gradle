buildscript {
    ext.kotlin_version = '2.0.21'

    repositories {
        mavenCentral()
        
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def printOutput(def output) {
    return tasks.create("printOutput") {
        for (line in output.toString().readLines()) {
            println "#educational_plugin" + line
        }
    }
}

subprojects {
    apply plugin: 'application'
    apply plugin: 'java'
    apply plugin: 'kotlin'

    sourceCompatibility = 17

    repositories {
        mavenCentral()
        
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"
        testImplementation group: 'junit', name: 'junit', version: '4.12'
    }


    compileKotlin {
        kotlinOptions.jvmTarget = "17"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "17"
    }

    sourceSets {
        main {
            kotlin.srcDir 'src'
            java.srcDir 'src'
        }
        test {
            kotlin.srcDir 'test'
            java.srcDir 'test'
        }
    }

    mainClassName = project.hasProperty("mainClass") ? project.getProperty("mainClass") : ""

    def runOutput = new ByteArrayOutputStream()
    tasks.run.setStandardOutput(runOutput)
    tasks.run.doLast { printOutput(runOutput) }
}

project(':util') {
    dependencies {
        implementation group: 'junit', name: 'junit', version: '4.12'
    }
}

configure(subprojects.findAll {it.name != 'util'}) {
  dependencies {
    implementation project(':util').sourceSets.main.output
    testImplementation project(':util').sourceSets.test.output
  }
}
